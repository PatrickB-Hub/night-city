{"version":3,"sources":["context/index.ts","components/Loader/index.tsx","hooks/MirrorShards/useRenderTarget.ts","hooks/MirrorShards/useReposition.ts","store.ts","components/Content/Text.tsx","hooks/Container/useContainer.ts","components/Container/index.tsx","components/Plane/CustomMaterial.ts","components/Plane/index.tsx","components/Content/Article.tsx","hooks/MirrorShards/useLayer.ts","components/Plane/PlaneCopies.tsx","components/Content/Cross.tsx","components/Content/Lines.tsx","components/Content/Star.tsx","components/Content/index.tsx","hooks/MirrorShards/useShardGeometry.ts","components/MirrorShards/ThinFilmFresnelMap.js","components/MirrorShards/index.tsx","components/Scene/index.tsx","components/Startup/index.tsx","components/Container/ScrollContainer.tsx","components/Nav/index.tsx","components/ToggleShardsButton/index.tsx","index.tsx"],"names":["ScrollTopContext","createContext","Loader","progress","useProgress","Html","center","style","color","useRenderTarget","settings","renderTarget","useMemo","renderTargetSettings","format","THREE","generateMipmaps","cubeCamera","useRef","useFrame","gl","scene","current","update","useReposition","group","size","useThree","mouse","x","width","y","height","rotationEuler","rotationQuaternion","useEffect","onMouseMove","event","clientX","clientY","document","addEventListener","removeEventListener","set","setFromEuler","quaternion","slerp","state","sections","pages","fov","scrollTop","textComponentOffset","colors","background","headings","articleIndex","font","hero","image","articles","offset","factor","header","aspect","text","crosses","speed","scale","position","lines","stars","posFactor","stripes","shards","args","rotation","Text","children","left","right","top","bottom","opacity","props","useState","geometry","setGeometry","useContext","load","tbf","curveSegments","onUpdate","useCallback","self","box","computeBoundingBox","boundingBox","getSize","ref","last","shift","lerp","frustumCulled","attach","transparent","MultilineText","lineHeight","split","map","index","useContainer","viewport","offsetContext","viewportWidth","viewportHeight","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","sectionHeight","offsetFactor","Container","name","parentOffset","curY","curTop","Provider","value","CustomMaterial","vertexShader","fragmentShader","uniforms","tex","hasTexture","this","extend","Plane","forwardRef","planeArgs","material","Article","alignRight","pixelWidth","textAlign","useLayer","layers","disableAll","sort","forEach","layer","enable","lookAt","planeRef","PlaneCopies","vertices","vertex","i","Cross","posOffset","curZ","z","nextZ","Math","PI","Lines","Star","nextY","Content","currentOffset","setCurrentOffset","useTexture","images","minFilter","texture","floor","min","length","shardGeometry","push","faces","computeVertexNormals","face","materialIndex","ThinFilmFresnelMap","filmThickness","refractiveIndexFilm","refractiveIndexBase","_filmThickness","_refractiveIndexFilm","_refractiveIndexBase","_size","_data","Uint8Array","_updateData","call","needsUpdate","prototype","Object","create","get","updateSettings","_fresnelRefl","refractiveIndex1","refractiveIndex2","cos1","cos2","R","phi","sin1Sqr","refrRatio","sqrRefrRatio","atan","sqrt","r_p","r_s","xFit_1931","lambda","t1","t2","t3","exp","yFit_1931","zFit_1931","data","phi12","phi21","phi23","R12","T12","R23","R_bi","T_tot","R_star","R_bi_sqr","R_12_star","R_star_t_tot","refrRatioSqr","refrRatioSqrBase","cosThetaI","cosThetaT","cosThetaT2","pathDiff","pathDiff2PI","totX","totY","totZ","j","waveLen","deltaPhase","cosPhiX","cos","cosPhiY","v","wx","wy","wz","r","g","b","clamp","k","MirrorShard","sideMaterial","reflectionMaterial","geom","useShardGeometry","clone","MirrorShards","envMap","meshLayers","thinFilmFresnelMap","useResource","curX","nextX","sin","in_min","out_min","shard","Scene","showMirrorShards","Startup","camera","prevHeight","onResize","oldRadFov","newFov","tan","window","innerHeight","ScrollContainer","setScrollTop","previousSection","navItems","handleScroll","target","currentTarget","nextSection","scrollHeight","item","classList","toggle","getElementById","className","onScroll","Array","fill","_","id","Nav","href","ToggleShardsButton","setShowMirrorShards","onClick","App","concurrent","shadowMap","fallback","intensity","newScrollTop","prevState","ReactDOM","render"],"mappings":"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","file":"static/js/main.31695f0a.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const ScrollTopContext = createContext<any>({});","import { useProgress, Html } from \"@react-three/drei\";\r\n\r\nconst Loader: React.FC = () => {\r\n  const { progress } = useProgress();\r\n\r\n  return (\r\n    <Html center>\r\n      <span style={{ color: \"#FFFFFF\" }}>{progress} % loaded</span>\r\n    </Html>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useMemo, useRef } from 'react'\r\nimport * as THREE from 'three'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\n\r\nconst useRenderTarget = (settings = {}): [React.MutableRefObject<THREE.CubeCamera | undefined>, THREE.WebGLCubeRenderTarget] => {\r\n  const renderTarget = useMemo(() => {\r\n    const renderTargetSettings = {\r\n      format: THREE.RGBAFormat,\r\n      generateMipmaps: true\r\n    };\r\n\r\n    return new THREE.WebGLCubeRenderTarget(1024, {\r\n      ...renderTargetSettings,\r\n      ...settings\r\n    })\r\n  }, [settings]);\r\n\r\n  const cubeCamera = useRef<THREE.CubeCamera>();\r\n\r\n  useFrame(({ gl, scene }) => {\r\n    cubeCamera?.current?.update(gl, scene);\r\n  });\r\n\r\n  return [cubeCamera, renderTarget];\r\n}\r\n\r\nexport default useRenderTarget;","import { useRef, useMemo, useEffect } from 'react'\r\nimport * as THREE from 'three'\r\nimport { useFrame, useThree } from 'react-three-fiber'\r\n\r\nconst useReposition = () => {\r\n  const group = useRef<THREE.Group>();\r\n  const { size } = useThree();\r\n  const mouse = useRef({ x: size.width / 2, y: size.height / 2 })\r\n\r\n  const [rotationEuler, rotationQuaternion] = useMemo(() => {\r\n    return [new THREE.Euler(0, 0, 0), new THREE.Quaternion(0, 0, 0, 0)]\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const onMouseMove = (event: MouseEvent) => {\r\n      const { clientX, clientY } = event;\r\n      mouse.current = { x: clientX, y: clientY };\r\n    };\r\n    document.addEventListener(\"mousemove\", onMouseMove);\r\n\r\n    return () => document.removeEventListener(\"mousemove\", onMouseMove);\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if (!group.current) return;\r\n\r\n    const x = (mouse.current.x / size.width) / 10;\r\n    const y = (mouse.current.y / size.height) / 10;\r\n    rotationEuler.set(y, x, 0);\r\n    rotationQuaternion.setFromEuler(rotationEuler);\r\n    group.current.quaternion.slerp(rotationQuaternion, 0.1);\r\n  })\r\n\r\n  return group;\r\n}\r\n\r\nexport default useReposition;\r\n","const state = {\r\n  sections: 10,\r\n  pages: 10,\r\n  fov: 75,\r\n  scrollTop: 0,\r\n  textComponentOffset: 6,\r\n  colors: {\r\n    background: \"#202020\",\r\n    headings: [\r\n      \"#fcf435\",\r\n      \"#03d7f2\"\r\n    ],\r\n    articleIndex: \"#141414\"\r\n  },\r\n  font: \"./Play_Bold.json\",\r\n  hero: {\r\n    image: \"./cyberpunk_logo-blurred.png\"\r\n  },\r\n  articles: [\r\n    {\r\n      offset: 1,\r\n      factor: 1.75,\r\n      header: \"Skyline\",\r\n      image: \"./city_night.png\",\r\n      aspect: 1.65,\r\n      text: \"Night City's corporate showcase. Sleek skyscrapers form a brutalist, fortress-like skyline, presenting the unrivaled power of megacorps in all its arrogance.\"\r\n    },\r\n    {\r\n      offset: 2,\r\n      factor: 2.0,\r\n      header: \"Slums\",\r\n      image: \"./city_fog.png\",\r\n      aspect: 1.55,\r\n      text:\r\n        \"Heywood is a neighborhood of contrast—from modern skyscrapers and parks in the north, to dangerous, inhospitable slums in the south.\"\r\n    },\r\n    {\r\n      offset: 3,\r\n      factor: 2.25,\r\n      header: \"Vibrant\",\r\n      image: \"./city_neon2.png\",\r\n      aspect: 1.5,\r\n      text:\r\n        \"Westbrook is considered by many to be the best place to live and have fun in Night City. If you've got eddies, you come here to spend them. And if you don't? Well, take out a loan and pretend you're on top of the world.\"\r\n    },\r\n    {\r\n      offset: 4,\r\n      factor: 2.0,\r\n      header: \"Crime\",\r\n      image: \"./city_day.png\",\r\n      aspect: 1.75,\r\n      text:\r\n        \"By 2077, the city has been overrun with crime, with the crime rate doubled than that of the NUSA. The homeless population has been a problem since the 2000s, and is now risen 300%. Each district is dominated by at least one gang.\"\r\n    },\r\n    {\r\n      offset: 5,\r\n      factor: 1.75,\r\n      header: \"Trade\",\r\n      image: \"./city_neon3.png\",\r\n      aspect: 1.55,\r\n      text:\r\n        \"Kabuki is a maze of narrow alleyways located right next to Little China. At night, they turn into a bazaar for implants, organs, steroids, and much more. It's said anything a person could desire can be found in the Kabuki Market.\"\r\n    },\r\n    {\r\n      offset: 7.25,\r\n      factor: 1.55,\r\n      header: \"Thrilling\",\r\n      image: \"./city_buildings.png\",\r\n      aspect: 1.7,\r\n      text: \"Night City is considered a thrilling and exciting location to visit, as well as an interesting and vibrant place to live for those of means, and a hellscape to the city's disenfranchised.\"\r\n    },\r\n    {\r\n      offset: 8.25,\r\n      factor: 1.5,\r\n      header: \"Busy\",\r\n      image: \"./city_streets.png\",\r\n      aspect: 1.75,\r\n      text: \"The business sectors of Night City include manufacturing industries, international trade and commerce, information services, electronic technologies, security services, and so on.\"\r\n    }\r\n  ],\r\n  crosses: [\r\n    { factor: -0.25, offset: 0, speed: 7.5, color: \"#141414\", scale: [1, 1, 1], position: [6, 2.5, 0.1], },\r\n    { factor: -1.25, offset: 6, speed: 10, color: \"#fcf435\", scale: [.8, .8, 1], position: [6, -1.5, 0.1] }\r\n  ],\r\n  lines: [\r\n    { factor: -1.5, offset: 0, color: \"#141414\", scale: [0.17, 0.7, 1], position: [-4, 1.75, 0.1] },\r\n    { factor: -1.5, offset: 6, color: \"#fcf435\", scale: [0.12, 0.35, 1], position: [4, 1.75, 0.1] },\r\n    { factor: -1.2, offset: 6.25, color: \"#fcf435\", scale: [0.15, 0.5, 1], position: [-5, 2.75, 0.1] }\r\n  ],\r\n  stars: [\r\n    { factor: -0.75, offset: 10, speed: 7.5, posFactor: -0.15, color: \"#03D7F2\", scale: [0.25, 0.25, 1], position: [-8, -8, 0.1] }\r\n  ],\r\n  stripes: [\r\n    { offset: 6.1, color: \"#181818\", height: 22 }\r\n  ],\r\n  shards: [\r\n    {\r\n      args: [2.87483173052424, 2.120755196190408, 0.05],\r\n      position: [3.116376203948097, -2.1742814140991196, 1.998859699752443],\r\n      rotation: [0.2536197471688286, -0.6683567077395978, -0.8428053193736256]\r\n    },\r\n    {\r\n      args: [1.799233278635274, 1.9642524560408021, 0.05],\r\n      position: [-3.325473394997085, 3.5307542721423446, 1.530151273151705],\r\n      rotation: [0.3951213133257899, -0.2888432911308304, 0.7178380971731012]\r\n    },\r\n    {\r\n      args: [0.8780801433198553, 2.2065216543855974, 0.05],\r\n      position: [1.2839348832937714, 2.888947614684322, 1.767835086028824],\r\n      rotation: [-0.3341775957580109, 0.8031736269533125, -0.18771283594857274]\r\n    },\r\n    {\r\n      args: [2.2175936863874006, 1.3820832190972703, 0.05],\r\n      position: [4.552400557892, 0.9814639517113943, 2.136395383986279],\r\n      rotation: [-0.3299625953354437, 0.6139693063561498, -0.3902201705507059]\r\n    },\r\n    {\r\n      args: [1.7446126775638997, 1.8211835436253392, 0.05],\r\n      position: [-2.826056860647832, -3.0308788716782042, 1.4685371584057485],\r\n      rotation: [-0.4052581815125295, 0.002812728418492, 0.54202362440499]\r\n    },\r\n    {\r\n      args: [1.139549518339333, 1.8007363020629232, 0.05],\r\n      position: [-0.041834072623521124, -1.351281881742426, 1.40411451302583],\r\n      rotation: [0.2848394396618561, -0.310029190116405, -0.107987000676972]\r\n    },\r\n    {\r\n      args: [2.2021865186914007, 1.610358395964105, 0.05],\r\n      position: [-4.1542927375782015, -0.349560252979882, 2.489538720961452],\r\n      rotation: [0.4401104979160235, 0.8179123712769852, -0.2157249608220475]\r\n    },\r\n    {\r\n      args: [0.1426105440458216, 2.416201863189162, 0.05],\r\n      position: [0.646982562789564, 1.0909673302614196, -0.351518200349154],\r\n      rotation: [-0.0692356415822184, 1.918047448701773, 0.5268942683942657]\r\n    }\r\n  ]\r\n};\r\n\r\nexport default state;\r\n","import React, {\r\n  useCallback,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { ReactThreeFiber, useFrame } from \"react-three-fiber\";\r\n\r\nimport CustomMaterial from \"../Plane/CustomMaterial\";\r\nimport { ScrollTopContext } from \"../../context\";\r\nimport state from \"../../store\";\r\n\r\ninterface Props\r\n  extends ReactThreeFiber.Object3DNode<THREE.Group, typeof THREE.Group> {\r\n  children?: string;\r\n  size?: number;\r\n  left?: boolean;\r\n  right?: boolean;\r\n  top?: boolean;\r\n  bottom?: boolean;\r\n  color?: string;\r\n  opacity?: number;\r\n  height?: number;\r\n  font?: string;\r\n}\r\n\r\nconst Text: React.FC<Props> = ({\r\n  children,\r\n  size = 1,\r\n  left,\r\n  right,\r\n  top,\r\n  bottom,\r\n  color = \"white\",\r\n  opacity = 1,\r\n  height = 0.01,\r\n  font = state.font,\r\n  ...props\r\n}) => {\r\n  const [geometry, setGeometry] = useState<THREE.TextBufferGeometry>();\r\n  const scrollTop = useContext(ScrollTopContext);\r\n\r\n  useEffect(() => {\r\n    const loader = new THREE.FontLoader();\r\n    loader.load(font, (font) => {\r\n      const tbf = new THREE.TextBufferGeometry(children as string, {\r\n        font,\r\n        size: 1,\r\n        height,\r\n        curveSegments: 32,\r\n      });\r\n      setGeometry(tbf);\r\n    });\r\n  }, [children, font, height]);\r\n\r\n  const onUpdate = useCallback(\r\n    (self) => {\r\n      const box = new THREE.Vector3();\r\n      self.geometry.computeBoundingBox();\r\n      self.geometry.boundingBox.getSize(box);\r\n      self.position.x = left ? 0 : right ? -box.x : -box.x / 2;\r\n      self.position.y = top ? 0 : bottom ? -box.y : -box.y / 2;\r\n    },\r\n    [left, right, top, bottom]\r\n  );\r\n\r\n  const ref = useRef<CustomMaterial>();\r\n  let last = scrollTop.current;\r\n  useFrame(() => {\r\n    if (ref.current) {\r\n      ref.current.shift = THREE.MathUtils.lerp(\r\n        ref.current.shift,\r\n        (scrollTop.current - last) / 200,\r\n        0.1\r\n      );\r\n    }\r\n    last = scrollTop.current;\r\n  });\r\n\r\n  return (\r\n    <group scale={[size, size, 0.1]} {...props}>\r\n      <mesh geometry={geometry} onUpdate={onUpdate} frustumCulled={false}>\r\n        <customMaterial\r\n          ref={ref}\r\n          attach=\"material\"\r\n          color={color}\r\n          transparent\r\n          opacity={opacity}\r\n        />\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\ninterface MultilineTextProps extends Props {\r\n  text: string;\r\n  lineHeight?: number;\r\n  position?: [x: number, y: number, z: number];\r\n}\r\n\r\nconst MultilineText: React.FC<MultilineTextProps> = ({\r\n  text,\r\n  size = 1,\r\n  lineHeight = 1,\r\n  position = [0, 0, 0],\r\n  ...props\r\n}) => {\r\n  return (\r\n    <>\r\n      {text.split(\"\\n\").map((text, index) => (\r\n        <Text\r\n          key={index}\r\n          position={[\r\n            position[0],\r\n            position[1] - index * lineHeight,\r\n            position[2],\r\n          ]}\r\n          size={size}\r\n          children={text}\r\n          {...props}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Text, MultilineText };\r\n","import { useContext } from \"react\";\r\nimport { useThree } from \"react-three-fiber\";\r\n\r\nimport { offsetContext } from \"../../components/Container\";\r\nimport state from \"../../store\";\r\n\r\n// custom hook: allows components to access container-specific data so they can react to scroll\r\nconst useContainer = () => {\r\n  const { size, viewport } = useThree();\r\n  const offset = useContext(offsetContext);\r\n  const { sections, pages } = state;\r\n  const viewportWidth = size.width\r\n  const viewportHeight = size.height\r\n  const canvasWidth = viewport.width;\r\n  const canvasHeight = viewport.height;\r\n  const mobile = size.width < 700;\r\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1);\r\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\r\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\r\n  const offsetFactor = (offset + 1) / sections;\r\n\r\n  return {\r\n    offset,\r\n    viewportWidth,\r\n    viewportHeight,\r\n    canvasWidth,\r\n    canvasHeight,\r\n    mobile,\r\n    margin,\r\n    contentMaxWidth,\r\n    sectionHeight,\r\n    offsetFactor\r\n  };\r\n}\r\n\r\nexport default useContainer;","import React, { createContext, useContext, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { ReactThreeFiber, useFrame } from \"react-three-fiber\";\r\n\r\nimport { ScrollTopContext } from \"../../context\";\r\nimport useContainer from \"../../hooks/Container/useContainer\";\r\n\r\nconst offsetContext = createContext(0);\r\n\r\ninterface ContainerProps\r\n  extends ReactThreeFiber.Object3DNode<THREE.Group, typeof THREE.Group> {\r\n  name?: string;\r\n  offset?: number;\r\n  factor: number;\r\n}\r\n\r\nconst Container: React.FC<ContainerProps> = ({\r\n  children,\r\n  name,\r\n  offset,\r\n  factor,\r\n  ...props\r\n}) => {\r\n  const {\r\n    offset: parentOffset,\r\n    sectionHeight,\r\n    viewportHeight,\r\n  } = useContainer();\r\n  const ref = useRef<THREE.Group>();\r\n  const scrollTop = useContext(ScrollTopContext);\r\n\r\n  offset = offset || parentOffset;\r\n\r\n  // Runs every frame and lerps the inner container into its place\r\n  useFrame(() => {\r\n    if (ref.current) {\r\n      const curY = ref.current.position.y;\r\n      const curTop = scrollTop.current;\r\n      ref.current.position.y = THREE.MathUtils.lerp(\r\n        curY,\r\n        (curTop / (viewportHeight / sectionHeight)) * factor,\r\n        0.1\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <offsetContext.Provider value={offset}>\r\n      <group\r\n        name={name}\r\n        position={[0, -sectionHeight * offset * factor, 0]}\r\n        {...props}\r\n      >\r\n        <group ref={ref}>{children}</group>\r\n      </group>\r\n    </offsetContext.Provider>\r\n  );\r\n};\r\n\r\nexport { offsetContext, Container };\r\n","import * as THREE from \"three\"\r\nimport { ReactThreeFiber, extend } from \"react-three-fiber\"\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      customMaterial: ReactThreeFiber.Object3DNode<CustomMaterial, typeof CustomMaterial>\r\n    }\r\n  }\r\n}\r\n\r\n// Effects used:\r\n// 1. RGB-shift\r\n// 2. Warping effect\r\n// 3. UV-coordinate zoom\r\nclass CustomMaterial extends THREE.ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      vertexShader: `\r\n      uniform float scale;\r\n      uniform float shift;\r\n      varying vec2 vUv;\r\n\r\n      void main() {\r\n        vec3 pos = position;\r\n        pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * shift * 5.0) * 0.125);\r\n        vUv = uv;\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\r\n      }`,\r\n      fragmentShader: `\r\n      uniform sampler2D tex;\r\n      uniform float hasTexture;\r\n      uniform float shift;\r\n      uniform float scale;\r\n      uniform vec3 color;\r\n      uniform float opacity;\r\n      varying vec2 vUv;\r\n      \r\n      void main() {\r\n        float angle = 1.55;\r\n        vec2 p = (vUv - vec2(0.5, 0.5)) * (1.0 - scale) + vec2(0.5, 0.5);\r\n        vec2 offset = shift / 4.0 * vec2(cos(angle), sin(angle));\r\n        vec4 cr = texture(tex, p + offset);\r\n        vec4 cga = texture(tex, p);\r\n        vec4 cb = texture(tex, p - offset);\r\n        if (hasTexture == 1.0) gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\r\n        else gl_FragColor = vec4(color, opacity);\r\n      }`,\r\n      uniforms: {\r\n        tex: { value: null },\r\n        hasTexture: { value: 0 },\r\n        scale: { value: 0 },\r\n        shift: { value: 0 },\r\n        opacity: { value: 1 },\r\n        color: { value: new THREE.Color(\"white\") }\r\n      }\r\n    });\r\n  }\r\n\r\n  set scale(value) {\r\n    this.uniforms.scale.value = value;\r\n  }\r\n\r\n  get scale() {\r\n    return this.uniforms.scale.value;\r\n  }\r\n\r\n  set shift(value) {\r\n    this.uniforms.shift.value = value;\r\n  }\r\n\r\n  get shift() {\r\n    return this.uniforms.shift.value;\r\n  }\r\n\r\n  set map(value) {\r\n    this.uniforms.hasTexture.value = !!value;\r\n    this.uniforms.tex.value = value;\r\n  }\r\n\r\n  get map() {\r\n    return this.uniforms.tex.value;\r\n  }\r\n\r\n  set color(value) {\r\n    this.uniforms.color.value = value;\r\n  }\r\n\r\n  get color() {\r\n    return this.uniforms.color.value;\r\n  }\r\n}\r\nextend({ CustomMaterial });\r\n\r\nexport default CustomMaterial;\r\n","import React, { forwardRef, useContext, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { ReactThreeFiber, useFrame } from \"react-three-fiber\";\r\n\r\nimport { ScrollTopContext } from \"../../context\";\r\nimport CustomMaterial from \"./CustomMaterial\";\r\nimport \"./CustomMaterial\";\r\nimport useContainer from \"../../hooks/Container/useContainer\";\r\nimport state from \"../../store\";\r\n\r\ninterface PlaneProps\r\n  extends ReactThreeFiber.Object3DNode<THREE.Mesh, typeof THREE.Mesh> {\r\n  name?: string;\r\n  color?: string;\r\n  shift?: number;\r\n  opacity?: number;\r\n  planeArgs?: [\r\n    width?: number,\r\n    height?: number,\r\n    widthSegments?: number,\r\n    heightSegments?: number\r\n  ];\r\n  map?: THREE.Texture;\r\n}\r\n\r\nconst Plane: React.FC<PlaneProps> = forwardRef(\r\n  (\r\n    { name, color = \"white\", shift = 1, opacity = 1, planeArgs, map, ...props },\r\n    ref\r\n  ) => {\r\n    const { viewportHeight, offsetFactor } = useContainer();\r\n    const scrollTop = useContext(ScrollTopContext);\r\n    const material = useRef<CustomMaterial>();\r\n\r\n    let last = scrollTop.current;\r\n\r\n    // sync shader effects to scroll data\r\n    useFrame(() => {\r\n      if (material.current) {\r\n        material.current.scale = THREE.MathUtils.lerp(\r\n          material.current.scale,\r\n          offsetFactor -\r\n            scrollTop.current / ((state.pages - 1) * viewportHeight),\r\n          0.1\r\n        );\r\n        material.current.shift = THREE.MathUtils.lerp(\r\n          material.current.shift,\r\n          (scrollTop.current - last) / shift,\r\n          0.1\r\n        );\r\n      }\r\n      last = scrollTop.current;\r\n    });\r\n\r\n    return (\r\n      <mesh name={name} ref={ref} {...props}>\r\n        <planeBufferGeometry attach=\"geometry\" args={planeArgs} />\r\n        <customMaterial\r\n          ref={material}\r\n          attach=\"material\"\r\n          color={color}\r\n          map={map}\r\n          transparent\r\n          opacity={opacity}\r\n        />\r\n      </mesh>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Plane;\r\n","import React from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Html } from \"@react-three/drei\";\r\n\r\nimport { Container } from \"../Container\";\r\nimport { Text } from \"./Text\";\r\nimport Plane from \"../Plane\";\r\nimport useContainer from \"../../hooks/Container/useContainer\";\r\nimport state from \"../../store\";\r\n\r\ninterface Props {\r\n  image: THREE.Texture;\r\n  index: number;\r\n  offset: number;\r\n  factor: number;\r\n  header: string;\r\n  aspect: number;\r\n  text: string;\r\n}\r\n\r\nconst Article: React.FC<Props> = ({\r\n  image,\r\n  index,\r\n  offset,\r\n  factor,\r\n  header,\r\n  aspect,\r\n  text,\r\n}) => {\r\n  const {\r\n    contentMaxWidth: width,\r\n    canvasWidth,\r\n    viewportWidth,\r\n    margin,\r\n    mobile,\r\n  } = useContainer();\r\n  const size = aspect < 1 && !mobile ? 0.65 : 1;\r\n  const alignRight = (canvasWidth - width * size - margin) / 2;\r\n  const pixelWidth = (viewportWidth * size) / 2;\r\n  const left = !(index % 2);\r\n  const color = index % 2 ? state.colors.headings[0] : state.colors.headings[1];\r\n\r\n  return (\r\n    <Container name={`article-${index}`} factor={factor} offset={offset}>\r\n      <group position={[left ? -alignRight : alignRight, 0, 0]}>\r\n          <Text\r\n            name=\"title\"\r\n            left={left}\r\n            right={!left}\r\n            size={width * 0.05}\r\n            color={color}\r\n            top\r\n            position={[\r\n              ((left ? -width : width) * size) / 2,\r\n              (width * size) / aspect / 2 + 0.5,\r\n              -0.02,\r\n            ]}\r\n          >\r\n            {header}\r\n          </Text>\r\n\r\n        <Plane\r\n          name=\"image\"\r\n          map={image}\r\n          planeArgs={[1, 1, 32, 32]}\r\n          shift={200}\r\n          scale={[width * size, (width * size) / aspect, 1]}\r\n          frustumCulled={false}\r\n        />\r\n\r\n        <Html\r\n          name=\"text\"\r\n          style={{\r\n            width: pixelWidth / (mobile ? 1 : 2),\r\n            textAlign: left ? \"left\" : \"right\",\r\n          }}\r\n          position={[\r\n            left ? (-width * size) / 2 : mobile ? -margin / 2 : margin / 2,\r\n            (-width * size) / 2 / aspect - 0.4,\r\n            -0.02,\r\n          ]}\r\n        >\r\n          {text}\r\n        </Html>\r\n\r\n        <Container name=\"article-index\" factor={0.2}>\r\n          <Text\r\n            opacity={0.5}\r\n            size={width * 0.1}\r\n            color={state.colors.articleIndex}\r\n            position={[\r\n              ((left ? width : -width) / 2) * (size + 0.1),\r\n              (width * size) / aspect / -1.7,\r\n              -0.02,\r\n            ]}\r\n          >\r\n            {\"0\" + (index + 1)}\r\n          </Text>\r\n        </Container>\r\n      </group>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import { useEffect, useRef } from 'react'\r\nimport * as THREE from \"three\";\r\n\r\n\r\nconst useLayer = (layers = [0]) => {\r\n  const ref = useRef<THREE.Mesh>();\r\n\r\n  useEffect(() => {\r\n    ref?.current?.layers.disableAll()\r\n\r\n    layers.sort().forEach((layer) => {\r\n      ref?.current?.layers.enable(layer);\r\n    });\r\n  });\r\n\r\n  return ref;\r\n}\r\n\r\nexport default useLayer;\r\n","import React, { useEffect, useMemo, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { ReactThreeFiber } from \"react-three-fiber\";\r\n\r\nimport \"./CustomMaterial\";\r\nimport useLayer from \"../../hooks/MirrorShards/useLayer\";\r\n\r\ninterface PlaneProps\r\n  extends ReactThreeFiber.Object3DNode<THREE.Group, typeof THREE.Group> {\r\n  name?: string;\r\n  layer: number[];\r\n  map: THREE.Texture;\r\n}\r\n\r\nconst Plane: React.FC<PlaneProps> = ({ name, layer, map, ...props }) => {\r\n  const group = useRef<THREE.Group>();\r\n\r\n  useEffect(() => {\r\n    group?.current?.lookAt(0, 0, 0);\r\n  }, []);\r\n\r\n  const planeRef = useLayer(layer);\r\n\r\n  return (\r\n    <group ref={group} {...props}>\r\n      <mesh ref={planeRef}>\r\n        <planeBufferGeometry attach=\"geometry\" args={[1, 1, 32, 32]} />\r\n        <customMaterial attach=\"material\" color=\"white\" map={map} opacity={1} />\r\n      </mesh>\r\n    </group>\r\n  );\r\n};\r\n\r\ninterface PlaneCopiesProps\r\n  extends ReactThreeFiber.Object3DNode<THREE.Group, typeof THREE.Group> {\r\n  name?: string;\r\n  layer: number[];\r\n  map: THREE.Texture;\r\n}\r\n\r\nconst PlaneCopies: React.FC<PlaneCopiesProps> = ({\r\n  name,\r\n  layer,\r\n  map,\r\n  ...props\r\n}) => {\r\n  const vertices = useMemo(() => {\r\n    const y = new THREE.IcosahedronGeometry(12);\r\n    return y.vertices;\r\n  }, []);\r\n\r\n  return (\r\n    <group name={name}>\r\n      {vertices.map((vertex, i) => (\r\n        <Plane\r\n          name={`planeCopy-${i}`}\r\n          key={`planeCopy-${i}`}\r\n          map={map}\r\n          position={vertex}\r\n          layer={layer}\r\n          {...props}\r\n        />\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default PlaneCopies;\r\n","import React, { useContext, useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nimport { ScrollTopContext } from \"../../context\";\r\nimport Plane from \"../Plane\";\r\nimport useContainer from \"../../hooks/Container/useContainer\";\r\nimport state from \"../../store\";\r\n\r\ninterface Props {\r\n  speed: number;\r\n  color: string;\r\n  scale: number[];\r\n  position: number[];\r\n}\r\n\r\nconst Cross: React.FC<Props> = ({\r\n  speed,\r\n  color,\r\n  scale,\r\n  position,\r\n  ...props\r\n}) => {\r\n  const ref = useRef<THREE.Group>();\r\n  const { viewportHeight, mobile } = useContainer();\r\n  const scrollTop = useContext(ScrollTopContext);\r\n\r\n  const posOffset = mobile ? 0.6 : 1;\r\n\r\n  useFrame(() => {\r\n    if (ref.current) {\r\n      const curTop = scrollTop.current;\r\n      const curZ = ref.current.rotation.z;\r\n      const nextZ =\r\n        (curTop / ((state.pages - 1) * viewportHeight)) * Math.PI * speed;\r\n      ref.current.rotation.z = THREE.MathUtils.lerp(curZ, nextZ, 0.1);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group\r\n      ref={ref}\r\n      position={[position[0] * posOffset, position[1] * posOffset, position[2]]}\r\n      scale={new THREE.Vector3(...scale)}\r\n      {...props}\r\n    >\r\n      <Plane\r\n        planeArgs={[1, 1, 32, 32]}\r\n        shift={500}\r\n        color={color}\r\n        scale={[1, 0.25, 1]}\r\n        position={[0, 0, 0]}\r\n      />\r\n      <Plane\r\n        planeArgs={[1, 1, 32, 32]}\r\n        shift={500}\r\n        color={color}\r\n        scale={[0.25, 1, 1]}\r\n        position={[0, 0, 0]}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Cross;\r\n","import React from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\nimport Plane from \"../Plane\";\r\nimport useContainer from \"../../hooks/Container/useContainer\";\r\n\r\ninterface Props {\r\n  color: string;\r\n  scale: number[];\r\n  position: number[];\r\n}\r\n\r\nconst Lines: React.FC<Props> = ({ color, scale, position, ...props }) => {\r\n  const { mobile } = useContainer();\r\n  const posOffset = mobile ? 0.65 : 1;\r\n\r\n  return (\r\n    <group\r\n      position={[position[0] * posOffset, position[1] * posOffset, position[2]]}\r\n      scale={new THREE.Vector3(...scale)}\r\n      {...props}\r\n    >\r\n      <Plane\r\n        planeArgs={[1, 1, 32, 32]}\r\n        shift={20}\r\n        color={color}\r\n        position={[-1.5, 0, 0]}\r\n      />\r\n      <Plane\r\n        planeArgs={[1, 1, 32, 32]}\r\n        shift={20}\r\n        color={color}\r\n        position={[1.5, 0, 0]}\r\n      />\r\n      <Plane\r\n        planeArgs={[1, 1, 32, 32]}\r\n        shift={20}\r\n        color={color}\r\n        position={[0, 0, 0]}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Lines;\r\n","import { useRef, useContext } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nimport Plane from \"../Plane\";\r\nimport useContainer from \"../../hooks/Container/useContainer\";\r\nimport { ScrollTopContext } from \"../../context\";\r\nimport state from \"../../store\";\r\n\r\ninterface Props {\r\n  speed: number;\r\n  posFactor: number;\r\n  color: string;\r\n  scale: number[];\r\n  position: number[];\r\n}\r\n\r\nconst Star: React.FC<Props> = ({\r\n  speed,\r\n  posFactor,\r\n  color,\r\n  scale,\r\n  position,\r\n  ...props\r\n}) => {\r\n  const { viewportHeight, mobile } = useContainer();\r\n  const scrollTop = useContext(ScrollTopContext);\r\n  const ref = useRef<THREE.Group>();\r\n\r\n  const posOffset = mobile ? 0.6 : 1;\r\n\r\n  useFrame(() => {\r\n    if (ref.current) {\r\n      const curTop = scrollTop.current;\r\n      const curZ = ref.current.rotation.z;\r\n      const nextY =\r\n        (curTop / ((state.pages - 1) * viewportHeight)) * -Math.PI * speed;\r\n      ref.current.rotation.z = THREE.MathUtils.lerp(curZ, nextY, 0.1);\r\n      ref.current.position.x =\r\n        posFactor * THREE.MathUtils.lerp(curZ, nextY, 0.05);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group\r\n      ref={ref}\r\n      position={[position[0] * posOffset, position[1], position[2]]}\r\n      scale={new THREE.Vector3(...scale)}\r\n      {...props}\r\n    >\r\n      <Plane\r\n        planeArgs={[1, 1, 32, 32]}\r\n        shift={500}\r\n        color={color}\r\n        scale={[0.25, 1.75, 1]}\r\n        rotation={[0, 0, 0]}\r\n      />\r\n      <Plane\r\n        planeArgs={[1, 1, 32, 32]}\r\n        shift={500}\r\n        color={color}\r\n        scale={[0.25, 1.75, 1]}\r\n        rotation={[0, 0, Math.PI / 2]}\r\n      />\r\n      <Plane\r\n        planeArgs={[1, 1, 32, 32]}\r\n        shift={500}\r\n        color={color}\r\n        scale={[0.25, 1.75, 1]}\r\n        rotation={[0, 0, Math.PI / -2]}\r\n      />\r\n      <Plane\r\n        planeArgs={[1, 1, 32, 32]}\r\n        shift={500}\r\n        color={color}\r\n        scale={[0.25, 1.75, 1]}\r\n        rotation={[0, 0, Math.PI / 4]}\r\n      />\r\n      <Plane\r\n        planeArgs={[1, 1, 32, 32]}\r\n        shift={500}\r\n        color={color}\r\n        scale={[0.25, 1.75, 1]}\r\n        rotation={[0, 0, Math.PI / -4]}\r\n      />\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Star;\r\n","import React, { useState, useMemo, useContext } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { useTexture } from \"@react-three/drei\";\r\n\r\nimport { MultilineText } from \"./Text\";\r\nimport Article from \"./Article\";\r\nimport Plane from \"../Plane\";\r\nimport PlaneCopies from \"../Plane/PlaneCopies\";\r\nimport { Container } from \"../Container\";\r\nimport Cross from \"./Cross\";\r\nimport Lines from \"./Lines\";\r\nimport Star from \"./Star\";\r\n\r\nimport useContainer from \"../../hooks/Container/useContainer\";\r\nimport { ScrollTopContext } from \"../../context\";\r\nimport state from \"../../store\";\r\n\r\nconst Content: React.FC = () => {\r\n  const [currentOffset, setCurrentOffset] = useState(0);\r\n  const scrollTop = useContext(ScrollTopContext);\r\n\r\n  const hero = useTexture(state.hero.image);\r\n  const images = useTexture(state.articles.map(({ image }) => image));\r\n  const {\r\n    sectionHeight,\r\n    contentMaxWidth: width,\r\n    viewportHeight,\r\n  } = useContainer();\r\n\r\n  const textComponentOffset = 6;\r\n\r\n  useMemo(() => {\r\n    hero.minFilter = THREE.LinearFilter;\r\n    images.forEach((texture) => (texture.minFilter = THREE.LinearFilter));\r\n  }, [images, hero]);\r\n\r\n  useFrame(() => {\r\n    const offset = Math.floor(\r\n      scrollTop.current / (sectionHeight * (viewportHeight / sectionHeight)) +\r\n        0.2\r\n    );\r\n    // skip the text component\r\n    setCurrentOffset(offset >= textComponentOffset ? offset - 1 : offset);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Container name=\"hero\" factor={1.2}>\r\n        <Plane\r\n          name=\"title\"\r\n          map={hero}\r\n          color={state.colors.background}\r\n          planeArgs={[1, 1, 32, 32]}\r\n          shift={50}\r\n          scale={[width, width / 4, 1]}\r\n          position={[-width / 35, 0, -0.01]}\r\n        />\r\n      </Container>\r\n\r\n      {state.crosses.map(({ factor, offset, ...props }, index) => (\r\n        <Container\r\n          name={`cross-${index}`}\r\n          key={index}\r\n          factor={factor}\r\n          offset={offset}\r\n        >\r\n          <Cross {...props} />\r\n        </Container>\r\n      ))}\r\n      {state.lines.map(({ factor, offset, ...props }, index) => (\r\n        <Container\r\n          name={`line-${index}`}\r\n          key={index}\r\n          factor={factor}\r\n          offset={offset}\r\n        >\r\n          <Lines {...props} />\r\n        </Container>\r\n      ))}\r\n      {state.stars.map(({ factor, offset, ...props }, index) => (\r\n        <Container\r\n          name={`star-${index}`}\r\n          key={index}\r\n          factor={factor}\r\n          offset={offset}\r\n        >\r\n          <Star {...props} />\r\n        </Container>\r\n      ))}\r\n\r\n      {state.stripes.map(({ offset, color, height }, index) => (\r\n        <Container\r\n          name={`stripe-${index}`}\r\n          key={index}\r\n          factor={-1.5}\r\n          offset={offset}\r\n        >\r\n          <Plane\r\n            planeArgs={[50, height, 32, 32]}\r\n            shift={-4}\r\n            color={color}\r\n            rotation={[0, 0, Math.PI / 8]}\r\n            position={[0, 0, -0.1]}\r\n          />\r\n        </Container>\r\n      ))}\r\n\r\n      {state.articles.map((props, index) => (\r\n        <Article key={index} index={index} {...props} image={images[index]} />\r\n      ))}\r\n\r\n      <Container\r\n        name=\"text-night_city\"\r\n        factor={1.2}\r\n        offset={textComponentOffset}\r\n      >\r\n        <MultilineText\r\n          top\r\n          left\r\n          size={width * 0.15}\r\n          lineHeight={width / 4.5}\r\n          position={[-width / 3.5, 0, -0.01]}\r\n          color={state.colors.headings[0]}\r\n          text={\"Night\\nCity\"}\r\n        />\r\n      </Container>\r\n\r\n      <Container name=\"text-2077\" factor={1.25} offset={9.1}>\r\n        <MultilineText\r\n          top\r\n          left\r\n          size={width * 0.15}\r\n          lineHeight={width / 4.5}\r\n          position={[-width / 3.5, 0, -0.01]}\r\n          color={state.colors.headings[1]}\r\n          text={\"2077\"}\r\n        />\r\n      </Container>\r\n\r\n      {currentOffset > 0 ? (\r\n        <PlaneCopies\r\n          name={`planeCopy-${currentOffset - 1}`}\r\n          map={images[Math.min(currentOffset - 1, images.length - 1)]}\r\n          scale={[15, 15, 15]}\r\n          layer={[11]}\r\n          frustumCulled={false}\r\n        />\r\n      ) : (\r\n        <PlaneCopies\r\n          name=\"planeCopy-0\"\r\n          map={hero}\r\n          scale={[width * 4, (width / 4) * 4, 1 * 4]}\r\n          layer={[11]}\r\n          frustumCulled={false}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;","import * as THREE from \"three\";\r\n\r\nconst shardGeometry = () => {\r\n  const geometry = new THREE.Geometry()\r\n  geometry.vertices.push(\r\n    new THREE.Vector3(-1, -1, 1),     // 0\r\n    new THREE.Vector3(1, -1, 1),      // 1\r\n    new THREE.Vector3(-1, -.95, 1),   // 2\r\n    new THREE.Vector3(1, -.95, 1),    // 3\r\n    new THREE.Vector3(-1, -1, -1),    // 4\r\n    new THREE.Vector3(-1, -.95, -1),  // 5\r\n  );\r\n\r\n  /*\r\n         5\r\n       /| \\  \r\n      2----3 \r\n      | |  | \r\n      | 4  |\r\n      |/ \\ |\r\n      0----1\r\n  */\r\n\r\n  geometry.faces.push(\r\n    // front\r\n    new THREE.Face3(4, 1, 0),\r\n    // top-right\r\n    new THREE.Face3(0, 3, 2),\r\n    new THREE.Face3(0, 1, 3),\r\n    // top-left\r\n    new THREE.Face3(4, 2, 5),\r\n    new THREE.Face3(4, 0, 2),\r\n    // bottom\r\n    new THREE.Face3(1, 4, 3),\r\n    new THREE.Face3(4, 5, 3),\r\n    // back\r\n    new THREE.Face3(2, 3, 5),\r\n  );\r\n  geometry.computeVertexNormals();\r\n  geometry.faces.forEach((face, i) => face.materialIndex = i);\r\n\r\n  return geometry;\r\n}\r\n\r\nexport default shardGeometry;","/**\r\n * @classdesc\r\n * ThinFilmFresnelMap is a lookup texture containing the reflection colour. The texture index value\r\n * is dot(normal, view). The texture values are stored in approximated gamma space (power 2.0), so\r\n * the sampled value needs to be multiplied with itself before use. The sampled value should replace\r\n * the fresnel factor in a PBR material.\r\n *\r\n * @property filmThickness The thickness of the thin film layer in nanometers. Defaults to 380.\r\n * @property refractiveIndexFilm The refractive index of the thin film. Defaults to 2.\r\n * @property refractiveIndexBase The refractive index of the material under the film. Defaults to 3.\r\n *\r\n * @constructor\r\n * @param filmThickness The thickness of the thin film layer in nanometers. Defaults to 380.\r\n * @param refractiveIndexFilm The refractive index of the thin film. Defaults to 2.\r\n * @param refractiveIndexBase The refractive index of the material under the film. Defaults to 3.\r\n * @param size The width of the texture. Defaults to 64.\r\n *\r\n * @extends DataTexture\r\n *\r\n * @author David Lenaerts <http://www.derschmale.com>\r\n */\r\nimport * as THREE from 'three';\r\n\r\nexport function ThinFilmFresnelMap(filmThickness, refractiveIndexFilm, refractiveIndexBase, size) {\r\n  this._filmThickness = filmThickness || 500.0;\r\n  this._refractiveIndexFilm = refractiveIndexFilm || 2;\r\n  this._refractiveIndexBase = refractiveIndexBase || 3;\r\n  this._size = size || 128;\r\n  this._data = new Uint8Array(this._size * 4);\r\n\r\n  this._updateData();\r\n\r\n  THREE.DataTexture.call(\r\n    this,\r\n    this._data,\r\n    this._size,\r\n    1,\r\n    THREE.RGBAFormat,\r\n    THREE.UnsignedByteType,\r\n    THREE.UVMapping,\r\n    THREE.RepeatWrapping,\r\n    THREE.RepeatWrapping,\r\n    THREE.LinearFilter,\r\n    THREE.LinearMipMapLinearFilter\r\n  );\r\n  this.generateMipmaps = true;\r\n  this.needsUpdate = true;\r\n}\r\n\r\nThinFilmFresnelMap.prototype = Object.create(THREE.DataTexture.prototype, {\r\n  filmThickness: {\r\n    get: function () {\r\n      return this._filmThickness;\r\n    },\r\n    set: function (value) {\r\n      this._filmThickness = value;\r\n      this.updateSettings(\r\n        this._filmThickness,\r\n        this._refractiveIndexFilm,\r\n        this._refractiveIndexBase\r\n      );\r\n    }\r\n  },\r\n  refractiveIndexFilm: {\r\n    get: function () {\r\n      return this._refractiveIndexFilm;\r\n    },\r\n    set: function (value) {\r\n      this._refractiveIndexFilm = value;\r\n      this.updateSettings(\r\n        this._filmThickness,\r\n        this._refractiveIndexFilm,\r\n        this._refractiveIndexBase\r\n      );\r\n    }\r\n  },\r\n  refractiveIndexBase: {\r\n    get: function () {\r\n      return this._refractiveIndexBase;\r\n    },\r\n    set: function (value) {\r\n      this._refractiveIndexBase = value;\r\n      this.updateSettings(\r\n        this._filmThickness,\r\n        this._refractiveIndexFilm,\r\n        this._refractiveIndexBase\r\n      );\r\n    }\r\n  }\r\n})\r\n\r\n/**\r\n * Regenerates the lookup texture given new data.\r\n * @param filmThickness The thickness of the thin film layer in nanometers. Defaults to 380.\r\n * @param refractiveIndexFilm The refractive index of the thin film. Defaults to 2.\r\n * @param refractiveIndexBase The refractive index of the material under the film. Defaults to 3.\r\n */\r\nThinFilmFresnelMap.prototype.updateSettings = function (filmThickness, refractiveIndexFilm, refractiveIndexBase) {\r\n  this._filmThickness = filmThickness || 380;\r\n  this._refractiveIndexFilm = refractiveIndexFilm || 2;\r\n  this._refractiveIndexBase = refractiveIndexBase || 3;\r\n  this._updateData();\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nThinFilmFresnelMap.prototype._fresnelRefl = function (refractiveIndex1, refractiveIndex2, cos1, cos2, R, phi) {\r\n  // r is amplitudinal, R is power\r\n  var sin1Sqr = 1.0 - cos1 * cos1; // = sin^2(incident)\r\n  var refrRatio = refractiveIndex1 / refractiveIndex2;\r\n\r\n  if (refrRatio * refrRatio * sin1Sqr > 1.0) {\r\n    // total internal reflection\r\n    R.x = 1.0;\r\n    R.y = 1.0;\r\n\r\n    var sqrRefrRatio = refrRatio * refrRatio;\r\n    // it looks like glsl's atan ranges are different from those in JS?\r\n    phi.x = 2.0 * Math.atan((-sqrRefrRatio * Math.sqrt(sin1Sqr - 1.0 / sqrRefrRatio)) / cos1);\r\n    phi.y = 2.0 * Math.atan(-Math.sqrt(sin1Sqr - 1.0 / sqrRefrRatio) / cos1);\r\n  } else {\r\n    var r_p = (refractiveIndex2 * cos1 - refractiveIndex1 * cos2) / (refractiveIndex2 * cos1 + refractiveIndex1 * cos2);\r\n    var r_s = (refractiveIndex1 * cos1 - refractiveIndex2 * cos2) / (refractiveIndex1 * cos1 + refractiveIndex2 * cos2);\r\n\r\n    phi.x = r_p < 0.0 ? Math.PI : 0.0;\r\n    phi.y = r_s < 0.0 ? Math.PI : 0.0;\r\n\r\n    R.x = r_p * r_p;\r\n    R.y = r_s * r_s;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nThinFilmFresnelMap.prototype._updateData = function () {\r\n  var filmThickness = this._filmThickness;\r\n  var refractiveIndexFilm = this._refractiveIndexFilm;\r\n  var refractiveIndexBase = this._refractiveIndexBase;\r\n  var size = this._size;\r\n\r\n  // approximate CIE XYZ weighting functions from: http://jcgt.org/published/0002/02/01/paper.pdf\r\n  function xFit_1931(lambda) {\r\n    var t1 = (lambda - 442.0) * (lambda < 442.0 ? 0.0624 : 0.0374);\r\n    var t2 = (lambda - 599.8) * (lambda < 599.8 ? 0.0264 : 0.0323);\r\n    var t3 = (lambda - 501.1) * (lambda < 501.1 ? 0.049 : 0.0382);\r\n    return 0.362 * Math.exp(-0.5 * t1 * t1) + 1.056 * Math.exp(-0.5 * t2 * t2) - 0.065 * Math.exp(-0.5 * t3 * t3);\r\n  }\r\n\r\n  function yFit_1931(lambda) {\r\n    var t1 = (lambda - 568.8) * (lambda < 568.8 ? 0.0213 : 0.0247);\r\n    var t2 = (lambda - 530.9) * (lambda < 530.9 ? 0.0613 : 0.0322);\r\n    return 0.821 * Math.exp(-0.5 * t1 * t1) + 0.286 * Math.exp(-0.5 * t2 * t2);\r\n  }\r\n\r\n  function zFit_1931(lambda) {\r\n    var t1 = (lambda - 437.0) * (lambda < 437.0 ? 0.0845 : 0.0278);\r\n    var t2 = (lambda - 459.0) * (lambda < 459.0 ? 0.0385 : 0.0725);\r\n    return 1.217 * Math.exp(-0.5 * t1 * t1) + 0.681 * Math.exp(-0.5 * t2 * t2);\r\n  }\r\n\r\n  var data = this._data;\r\n  var phi12 = new THREE.Vector2();\r\n  var phi21 = new THREE.Vector2();\r\n  var phi23 = new THREE.Vector2();\r\n  var R12 = new THREE.Vector2();\r\n  var T12 = new THREE.Vector2();\r\n  var R23 = new THREE.Vector2();\r\n  var R_bi = new THREE.Vector2();\r\n  var T_tot = new THREE.Vector2();\r\n  var R_star = new THREE.Vector2();\r\n  var R_bi_sqr = new THREE.Vector2();\r\n  var R_12_star = new THREE.Vector2();\r\n  var R_star_t_tot = new THREE.Vector2();\r\n\r\n  var refrRatioSqr = 1.0 / (refractiveIndexFilm * refractiveIndexFilm);\r\n  var refrRatioSqrBase = (refractiveIndexFilm * refractiveIndexFilm) / (refractiveIndexBase * refractiveIndexBase);\r\n\r\n  // RGB is too limiting, so we use the entire spectral domain, but using limited samples (64) to\r\n  // create more pleasing bands\r\n  var numBands = 64;\r\n  var waveLenRange = 780 - 380; // the entire visible range\r\n\r\n  for (var i = 0; i < size; ++i) {\r\n    var cosThetaI = i / size;\r\n    var cosThetaT = Math.sqrt(1 - refrRatioSqr * (1.0 - cosThetaI * cosThetaI));\r\n    var cosThetaT2 = Math.sqrt(1 - refrRatioSqrBase * (1.0 - cosThetaT * cosThetaT));\r\n\r\n    // this is essentially the extra distance traveled by a ray if it bounds through the film\r\n    var pathDiff = 2.0 * refractiveIndexFilm * filmThickness * cosThetaT;\r\n    var pathDiff2PI = 2.0 * Math.PI * pathDiff;\r\n\r\n    this._fresnelRefl(1.0, refractiveIndexFilm, cosThetaI, cosThetaT, R12, phi12);\r\n    T12.x = 1.0 - R12.x;\r\n    T12.y = 1.0 - R12.y;\r\n    phi21.x = Math.PI - phi12.x;\r\n    phi21.y = Math.PI - phi12.y;\r\n\r\n    // this concerns the base layer\r\n    this._fresnelRefl(refractiveIndexFilm, refractiveIndexBase, cosThetaT, cosThetaT2, R23, phi23);\r\n    R_bi.x = Math.sqrt(R23.x * R12.x);\r\n    R_bi.y = Math.sqrt(R23.y * R12.y);\r\n    T_tot.x = Math.sqrt(T12.x * T12.x);\r\n    T_tot.y = Math.sqrt(T12.y * T12.y);\r\n    R_star.x = (T12.x * T12.x * R23.x) / (1.0 - R23.x * R12.x);\r\n    R_star.y = (T12.y * T12.y * R23.y) / (1.0 - R23.y * R12.y);\r\n    R_bi_sqr.x = R_bi.x * R_bi.x;\r\n    R_bi_sqr.y = R_bi.y * R_bi.y;\r\n    R_12_star.x = R12.x + R_star.x;\r\n    R_12_star.y = R12.y + R_star.y;\r\n    R_star_t_tot.x = R_star.x - T_tot.x;\r\n    R_star_t_tot.y = R_star.y - T_tot.y;\r\n    var x = 0,\r\n      y = 0,\r\n      z = 0;\r\n    var totX = 0,\r\n      totY = 0,\r\n      totZ = 0;\r\n\r\n    // TODO: we could also put the thickness in the look-up table, make it a 2D table\r\n    for (var j = 0; j < numBands; ++j) {\r\n      var waveLen = 380 + (j / (numBands - 1)) * waveLenRange;\r\n      var deltaPhase = pathDiff2PI / waveLen;\r\n\r\n      var cosPhiX = Math.cos(deltaPhase + phi23.x + phi21.x);\r\n      var cosPhiY = Math.cos(deltaPhase + phi23.y + phi21.y);\r\n      var valX =\r\n        R_12_star.x +\r\n        ((2.0 * (R_bi.x * cosPhiX - R_bi_sqr.x)) / (1.0 - 2 * R_bi.x * cosPhiX + R_bi_sqr.x)) * R_star_t_tot.x;\r\n      var valY =\r\n        R_12_star.y +\r\n        ((2.0 * (R_bi.y * cosPhiY - R_bi_sqr.y)) / (1.0 - 2 * R_bi.y * cosPhiY + R_bi_sqr.y)) * R_star_t_tot.y;\r\n      var v = 0.5 * (valX + valY);\r\n\r\n      var wx = xFit_1931(waveLen);\r\n      var wy = yFit_1931(waveLen);\r\n      var wz = zFit_1931(waveLen);\r\n\r\n      totX += wx;\r\n      totY += wy;\r\n      totZ += wz;\r\n\r\n      x += wx * v;\r\n      y += wy * v;\r\n      z += wz * v;\r\n    }\r\n\r\n    x /= totX;\r\n    y /= totY;\r\n    z /= totZ;\r\n\r\n    var r = 3.2406 * x - 1.5372 * y - 0.4986 * z;\r\n    var g = -0.9689 * x + 1.8758 * y + 0.0415 * z;\r\n    var b = 0.0557 * x - 0.204 * y + 1.057 * z;\r\n\r\n    r = THREE.MathUtils.clamp(r, 0.0, 1.0);\r\n    g = THREE.MathUtils.clamp(g, 0.0, 1.0);\r\n    b = THREE.MathUtils.clamp(b, 0.0, 1.0);\r\n\r\n    // linear to gamma\r\n    r = Math.sqrt(r);\r\n    g = Math.sqrt(g);\r\n    b = Math.sqrt(b);\r\n\r\n    // CIE XYZ to linear rgb conversion matrix:\r\n    // 3.2406 -1.5372 -0.4986\r\n    // -0.9689  1.8758  0.0415\r\n    // 0.0557 -0.2040  1.0570\r\n\r\n    var k = i << 2;\r\n    data[k] = Math.floor(r * 0xff);\r\n    data[k + 1] = Math.floor(g * 0xff);\r\n    data[k + 2] = Math.floor(b * 0xff);\r\n    data[k + 3] = 0xff;\r\n  }\r\n\r\n  this.needsUpdate = true;\r\n}\r\n","import { useState, useRef, useContext } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { ReactThreeFiber, useFrame, useResource } from \"react-three-fiber\";\r\n\r\nimport useLayer from \"../../hooks/MirrorShards/useLayer\";\r\nimport useContainer from \"../../hooks/Container/useContainer\";\r\nimport useShardGeometry from \"../../hooks/MirrorShards/useShardGeometry\";\r\nimport { ThinFilmFresnelMap } from \"./ThinFilmFresnelMap\";\r\nimport { ScrollTopContext } from \"../../context\";\r\nimport state from \"../../store\";\r\n\r\nconst scale = (\r\n  num: number,\r\n  in_min: number,\r\n  in_max: number,\r\n  out_min: number,\r\n  out_max: number\r\n) => {\r\n  return ((num - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\r\n};\r\n\r\ninterface Props {\r\n  name?: string;\r\n  sideMaterial: THREE.MeshLambertMaterial;\r\n  reflectionMaterial: THREE.MeshLambertMaterial;\r\n  layers: number[];\r\n}\r\n\r\nconst MirrorShard: React.FC<Props> = ({\r\n  name,\r\n  sideMaterial,\r\n  reflectionMaterial,\r\n  layers,\r\n  ...props\r\n}) => {\r\n  const ref = useLayer(layers);\r\n\r\n  const geometry = useShardGeometry();\r\n  const geom = geometry.clone();\r\n\r\n  useFrame(() => {\r\n    if (ref.current) {\r\n      ref.current.rotation.y += 0.001;\r\n      ref.current.rotation.z += 0.005;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <mesh\r\n      name={name}\r\n      ref={ref}\r\n      geometry={geom}\r\n      material={[\r\n        reflectionMaterial,\r\n        sideMaterial,\r\n        sideMaterial,\r\n        sideMaterial,\r\n        sideMaterial,\r\n        sideMaterial,\r\n        sideMaterial,\r\n        reflectionMaterial,\r\n      ]}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\ninterface MirrorShardsProps\r\n  extends ReactThreeFiber.Object3DNode<THREE.Group, typeof THREE.Group> {\r\n  envMap: THREE.Texture;\r\n  meshLayers: number[];\r\n}\r\n\r\nconst MirrorShards: React.FC<MirrorShardsProps> = ({\r\n  envMap,\r\n  meshLayers,\r\n  ...props\r\n}) => {\r\n  const ref = useRef<THREE.Group>();\r\n  const { viewportHeight, canvasWidth } = useContainer();\r\n  const scrollTop = useContext(ScrollTopContext);\r\n\r\n  const [thinFilmFresnelMap] = useState(new ThinFilmFresnelMap());\r\n\r\n  const sideMaterial = useResource<THREE.MeshLambertMaterial>();\r\n  const reflectionMaterial = useResource<THREE.MeshLambertMaterial>();\r\n\r\n  useFrame(() => {\r\n    if (ref.current) {\r\n      const top = scrollTop.current;\r\n      const curX = ref.current.position.x;\r\n      const nextX = scale(\r\n        Math.sin((top / viewportHeight) * Math.PI),\r\n        1,\r\n        -1,\r\n        -canvasWidth + canvasWidth / 2,\r\n        canvasWidth - canvasWidth / 2\r\n      );\r\n      ref.current.position.x = THREE.MathUtils.lerp(curX, nextX, 0.1);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <group ref={ref} name=\"MirrorShards\" {...props}>\r\n      <meshLambertMaterial\r\n        ref={sideMaterial}\r\n        map={thinFilmFresnelMap as unknown as THREE.Texture}\r\n        color=\"#aaa\"\r\n      />\r\n      <meshLambertMaterial\r\n        ref={reflectionMaterial}\r\n        map={thinFilmFresnelMap as unknown as THREE.Texture}\r\n        envMap={envMap}\r\n        color=\"#fff\"\r\n      />\r\n      {state.shards.map((shard, index) => (\r\n        <MirrorShard\r\n          name={`shard-${index}`}\r\n          key={`shard-${index}`}\r\n          sideMaterial={sideMaterial.current}\r\n          reflectionMaterial={reflectionMaterial.current}\r\n          layers={meshLayers}\r\n          {...shard}\r\n        />\r\n      ))}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default MirrorShards;\r\n","import useRenderTarget from \"../../hooks/MirrorShards/useRenderTarget\";\r\nimport useReposition from \"../../hooks/MirrorShards/useReposition\";\r\nimport Content from \"../Content\";\r\nimport { Container } from \"../Container\";\r\nimport MirrorShards from \"../MirrorShards\";\r\n\r\ninterface Props {\r\n  showMirrorShards: boolean;\r\n}\r\n\r\nconst Scene: React.FC<Props> = ({ showMirrorShards }) => {\r\n  const [cubeCamera, renderTarget] = useRenderTarget();\r\n  const ref = useReposition();\r\n\r\n  return (\r\n    <group name=\"sceneContainer\">\r\n      <Content />\r\n      {showMirrorShards && (\r\n        <>\r\n          <cubeCamera\r\n            layers={[11]}\r\n            name=\"cubeCamera\"\r\n            ref={cubeCamera}\r\n            args={[0.1, 100, renderTarget]}\r\n            position={[0, 0, 5]}\r\n          />\r\n          <Container name=\"mirrorShards\" factor={-0.001} offset={1}>\r\n            <group ref={ref}>\r\n              <MirrorShards\r\n                position={[0, 0, 2]}\r\n                scale={[0.35, 0.35, 0.35]}\r\n                meshLayers={[0, 11]}\r\n                envMap={renderTarget.texture}\r\n              />\r\n            </group>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n","import { useRef, useEffect } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useThree, useFrame } from \"react-three-fiber\";\r\n\r\nimport customMaterial from \"../Plane/CustomMaterial\";\r\nimport Plane from \"../Plane\";\r\nimport state from \"../../store\";\r\n\r\nfunction Startup() {\r\n  const { size, camera } = useThree();\r\n  const fov = useRef(state.fov);\r\n  const planeRef = useRef<\r\n    THREE.Mesh<THREE.PlaneBufferGeometry, customMaterial>\r\n  >();\r\n  const prevHeight = useRef(size.height);\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      const oldRadFov = (fov.current * Math.PI) / 180;\r\n      const newRadFov =\r\n        2 *\r\n        Math.atan(\r\n          (Math.tan(oldRadFov / 2) * window.innerHeight) / prevHeight.current\r\n        );\r\n      const newFov = (newRadFov * 180) / Math.PI;\r\n      (camera as THREE.PerspectiveCamera).fov = newFov;\r\n      prevHeight.current = window.innerHeight;\r\n      fov.current = newFov;\r\n    };\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    return () => window.removeEventListener(\"resize\", onResize);\r\n  }, [camera]);\r\n\r\n  useFrame(() => {\r\n    if (planeRef.current) {\r\n      planeRef.current.material.opacity = THREE.MathUtils.lerp(\r\n        planeRef.current.material.opacity,\r\n        0,\r\n        0.1\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Plane\r\n      name=\"startupPlane\"\r\n      ref={planeRef}\r\n      color={state.colors.background}\r\n      position={[0, 0, 1]}\r\n      scale={[100, 100, 1]}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Startup;\r\n","import { useEffect, useRef, useCallback } from \"react\";\r\n\r\nimport state from \"../../store\";\r\n\r\ninterface ScrollContainerProps {\r\n  setScrollTop: (newScrollTop: number) => void;\r\n}\r\n\r\nconst ScrollContainer: React.FC<ScrollContainerProps> = ({ setScrollTop }) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const previousSection = useRef<number>(0);\r\n  const navItems = useRef<HTMLElement | null>();\r\n\r\n  // synchronize the local scrollTop with the actual one\r\n  const handleScroll = useCallback(\r\n    (event: any) => {\r\n      if (event.target === event.currentTarget) {\r\n        setScrollTop(event.target.scrollTop);\r\n\r\n        // show current section in the navigation bar\r\n        const nextSection = Math.floor(\r\n          (event.target.scrollTop / event.target.scrollHeight) * 10\r\n        );\r\n\r\n        if (previousSection.current !== nextSection) {\r\n          navItems?.current?.children\r\n            ?.item(previousSection.current)\r\n            ?.classList.toggle(\"active\");\r\n          navItems?.current?.children\r\n            ?.item(nextSection)\r\n            ?.classList.toggle(\"active\");\r\n          previousSection.current = nextSection;\r\n        }\r\n      }\r\n    },\r\n    [setScrollTop]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!navItems.current) {\r\n      navItems.current = document.getElementById(\"nav\");\r\n      navItems?.current?.children?.item(0)?.classList.toggle(\"active\");\r\n    }\r\n\r\n    handleScroll({ target: ref.current });\r\n  }, [handleScroll]);\r\n\r\n  return (\r\n    <div className=\"scrollContainer\" onScroll={handleScroll} ref={ref}>\r\n      {new Array(state.sections).fill(null).map((_, index) => (\r\n        <div\r\n          key={index}\r\n          id={\"0\" + index}\r\n          style={{ height: `${(state.pages / state.sections) * 100}vh` }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollContainer;\r\n","import state from \"../../store\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div id=\"nav\" className=\"nav\">\r\n        {new Array(state.sections).fill(null).map((_, index) => (\r\n          <a href={\"#0\" + index} key={\"link-\" + index} className=\"nav-item\">\r\n            {\" \"}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","interface Props {\r\n  setShowMirrorShards: () => void;\r\n}\r\n\r\nconst ToggleShardsButton: React.FC<Props> = ({ setShowMirrorShards }) => {\r\n  return (\r\n    <button\r\n      onClick={setShowMirrorShards}\r\n      className=\"btn\"\r\n    >\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ToggleShardsButton;\r\n","import { useState, useRef, Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Canvas } from \"react-three-fiber\";\r\n\r\nimport \"./styles.css\";\r\n\r\nimport { ScrollTopContext } from \"./context\";\r\n\r\nimport Loader from \"./components/Loader\";\r\nimport Scene from \"./components/Scene\";\r\nimport Startup from \"./components/Startup\";\r\nimport ScrollContainer from \"./components/Container/ScrollContainer\";\r\nimport Nav from \"./components/Nav\";\r\n// import Effects from \"./components/Effects\";\r\nimport ToggleShardsButton from \"./components/ToggleShardsButton\";\r\nimport state from \"./store\";\r\n\r\nfunction App() {\r\n  const [showMirrorShards, setShowMirrorShards] = useState(true);\r\n  const scrollTop = useRef(state.scrollTop);\r\n\r\n  return (\r\n    <>\r\n      <Canvas concurrent shadowMap camera={{ position: [0, 0, 5] }}>\r\n        <Suspense fallback={<Loader />}>\r\n          <ScrollTopContext.Provider value={scrollTop}>\r\n            <Scene showMirrorShards={showMirrorShards} />\r\n          </ScrollTopContext.Provider>\r\n          <Startup />\r\n        </Suspense>\r\n        <ambientLight intensity={0.8} />\r\n        {/* <Effects /> */}\r\n      </Canvas>\r\n      <ScrollContainer\r\n        setScrollTop={(newScrollTop: number) => {\r\n          scrollTop.current = newScrollTop;\r\n        }}\r\n      />\r\n      <Nav />\r\n      <ToggleShardsButton\r\n        setShowMirrorShards={() =>\r\n          setShowMirrorShards((prevState) => !prevState)\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}